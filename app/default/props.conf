[heroku]
category = Structured
description = Output produced by Heroku log drains, based on RFC5424.

# Regex to match the RFC5424 header values that prefix the timestamp.
TIME_PREFIX = \d+\s<\d{1,3}>\d\s
# The format is RFC3339, see https://datatracker.ietf.org/doc/html/rfc3339.
TIME_FORMAT = %Y-%m-%dT%T.%6N%:z

# Remove unused RFC5424 fields from all Heroku log drain messages.
SEDCMD-strip_rfc5424_header = s/^\d+\s<\d{1,3}>\d\s(.+)\shost\s/\1 /

# Remove additional RFC5424 prefix fields from JSON based messages, enables formatting and field extraction.
SEDCMD-strip_json_prefix = s/^.+\s-\s(\{.+\})\s*$/\1/

# Set specific source types for non-app Heroku log drain messages, e.g. Heroku router messages.
TRANSFORMS-source_type = heroku_app_source_type, heroku_system_source_type, heroku_router_source_type, heroku_api_source_type

# Do not index some high volume low value messages.
TRANSFORMS-heroku_router_null_queue = heroku_router_double_underscore_null_queue, heroku_router_canary_null_queue, heroku_system_runtime_metrics_null_queue

[heroku:app]
category = Structured
description = Logging output from the application itself, including logs generated by your app's code and dependencies.

[heroku:system]
category = Structured
description = Messages about actions taken by the Heroku platform.

EXTRACT-component,dyno = ^\S+\s(?<component>\S+)\s(?<dyno>\S+)
EXTRACT-message = \s-\s(?<message>.*)
EXTRACT-state = State changed from \w+ to (?<state>\w+)$
EXTRACT-exit_code = Process exited with status (?<exit_code>\w+)$
EXTRACT-code,desc = Error (?<code>\w+) \((?<desc>.+)\)

[heroku:router]
category = Structured
description = Request logs produced by the Heroku HTTP routers.

# Note: Only extract component as request logs contain a dyno field with a value that aligns with the other Heroku source types. Would always be "router" otherwise.
EXTRACT-component = ^\S+\s(?<component>\S+)

# We convert `fwd` into a multivalue field using `fields.conf`.

# Splunk CIM fields for the web model, see https://docs.splunk.com/Documentation/CIM/5.0.1/User/Web and https://devcenter.heroku.com/articles/http-routing#info-logs.
# The `status` field already exists in the log message.
EXTRACT-duration = service=(?<duration>\d+)ms
EXTRACT-uri_path = path="(?<uri_path>[^#?"]+)\S*"
EXTRACT-uri_query = path="\S+(?<uri_query>\?[^"]+)"

EVAL-src = mvindex(fwd, 0)
EVAL-url = protocol . "://" . host . path
EVAL-vendor_product = "Heroku"

FIELDALIAS-http_method = method AS http_method
FIELDALIAS-dest = host AS dest
FIELDALIAS-bytes_out = bytes AS bytes_out

[heroku:api]
category = Structured
description = Messages about Heroku app administrative actions taken by users.

EXTRACT-component,dyno = ^\S+\s(?<component>\S+)\s(?<dyno>\S+)

# Splunk CIM fields for the change model, see https://docs.splunk.com/Documentation/CIM/5.0.1/User/Change.
EXTRACT-user = by user (?<user>\S+)
EXTRACT-command = command `(?<command>[^`]+)`
EXTRACT-release = Release (?<release>v\d+)
EXTRACT-deploy = Deploy (?<deploy>\S+)
EXTRACT-scale = Scaled to (?<scale>\S+)
EXTRACT-config_vars = (?:Set|Remove) (?<config_vars>.+) config vars

EVAL-action = case(match(_raw, "Set .+ config vars"), "created", match(_raw, "Remove .+ config vars"), "deleted", isnotnull(command), "started", isnotnull(release) OR isnotnull(deploy) OR isnotnull(scale), "modified")
EVAL-change_type = case(isnotnull(release), "release", isnotnull(deploy), "deploy", isnotnull(scale), "scale", isnotnull(config_vars), "config_vars", isnotnull(command), "process")
EVAL-user_type = case(match(user, "\S+@addons\.heroku\.com"), "addon")
EVAL-vendor_product = "Heroku"

FIELDALIAS-dest = host AS dest
